name: Release AST Inspector VSIX

on:
    push:
        branches:
            - main

jobs:
    check_push:
        outputs:
            is_feat: ${{ steps.check_commit_type.outputs.is_feat }}
        runs-on: ubuntu-latest
        steps:
            - name: Get commit message
              id: get-commit-message
              run: echo "COMMIT_MESSAGE=${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT

            - name: Check commit type
              id: check_commit_type
              run: |
                if [[ ! "${{ steps.get-commit-message.outputs.COMMIT_MESSAGE }}" =~ ^\#(chore|feat) ]]; then
                    echo "Commit message must contain #chore or #feat"
                    exit 1
                else
                    if [[ "${{ steps.get-commit-message.outputs.COMMIT_MESSAGE }}" =~ ^\#(feat) ]]; then
                        echo "Commit message contains #feat, proceeding with release"
                        echo "is_feat=true" >> $GITHUB_OUTPUT
                    else
                        echo "Commit message contains #chore, skipping release"
                        echo "is_feat=false" >> $GITHUB_OUTPUT
                    fi
                fi

    release:
        needs: check_push
        permissions:
            contents: write
            actions: read
            security-events: write
            issues: write
            pull-requests: write
        if: ${{ needs.check_push.outputs.is_feat == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install dependencies
              run: |
                npm install
                cd frontend && npm install
                cd ..
            
            - name: Clear any package-lock changes
              run: git checkout -- .
            
            - name: Install VSCE
              run: npm install -g @vscode/vsce

            - name: Configure Git
              run: |
                git config --global user.email "fake@email.com"
                git config --global user.name "Luau AST Explorer Release Bot"

            - name: Bump Version
              run: |
                npm version patch
            
            - name: Build
              run: npm run compile

            - name: Get version
              id: get-version
              run: |
                VERSION=$(cat package.json | jq -r '.version')
                echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

            - name: Package
              run: npm run package

            - name: Update package.json
              run: |
                echo "Updating package.json with new version..."
                jq --arg version "${{ steps.get-version.outputs.VERSION }}" '.version = $version' package.json > package.json.tmp && mv package.json.tmp package.json

            - name: Create PR for JSON bump
              uses: peter-evans/create-pull-request@v6
              with:
                title: '#chore Bump version to ${{ steps.get-version.outputs.VERSION }}'
                body: 'Automated version bump to ${{ steps.get-version.outputs.VERSION }}'
                branch: package-json-bump-${{ steps.get-version.outputs.VERSION }}
                base: main
                token: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Create release
              uses: softprops/action-gh-release@v2
              with:
                tag_name: ${{ steps.get-version.outputs.VERSION }}
                name: Luau AST Explorer ${{ steps.get-version.outputs.VERSION }}
                files: ./luau-ast-explorer-${{ steps.get-version.outputs.VERSION }}.vsix
                draft: false
                prerelease: true
                token: ${{ secrets.GITHUB_TOKEN }}
