name: CI Checks

on:
    pull_request:
        branches:
            - main
        types:
            - opened
            - edited
            - reopened
            - synchronize

jobs:
    check_pr_type:
        runs-on: ubuntu-latest
        steps:
            - name: Check PR type
              run: |
                if [[ ! "${{ github.event.pull_request.title }}" =~ \#(chore|feat|bug) ]]; then
                    echo "PR title must contain #chore, #feat, or #bug"
                    exit 1
                fi

    auto_changelog:
        permissions:
            contents: write
            actions: read
            security-events: write
            issues: write
            pull-requests: write
        runs-on: ubuntu-latest
        needs: check_pr_type
        if: ${{ !contains(github.event.pull_request.title, '#chore') }}
        steps:
          - name: Checkout PR branch
            uses: actions/checkout@v3
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              ref: ${{ github.event.pull_request.head.ref }}
              
          - name: Configure Git
            run: |
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git config --global user.name "github-actions[bot]"
              
          - name: Create changelog file
            run: |
              # Extract PR number and type from title
              PR_NUMBER="${{ github.event.pull_request.number }}"
              PR_TITLE="${{ github.event.pull_request.title }}"
              
              # Determine type from title
              if [[ "$PR_TITLE" =~ ^\#feat ]]; then
                TYPE="feat"
              elif [[ "$PR_TITLE" =~ ^\#bug ]]; then
                TYPE="bug"
              fi
              
              # Create changelog file
              CHANGELOG_FILE=".changes/${PR_NUMBER}-${TYPE}.md"
              
              # Check if file already exists
              if [ -f "$CHANGELOG_FILE" ]; then
                echo "Changelog file already exists: $CHANGELOG_FILE"
                exit 0
              fi
              
              # Extract description from PR title (remove #feat/#bug prefix)
              DESCRIPTION=$(echo "$PR_TITLE" | sed 's/^#[a-zA-Z]* *//')
              
              # Create changelog file with description
              echo "$DESCRIPTION" > "$CHANGELOG_FILE"
              
              # Add and commit the file
              git add "$CHANGELOG_FILE"
              git commit -m "Add changelog file for PR #${PR_NUMBER}"
              git push origin ${{ github.event.pull_request.head.ref }}
              
              echo "Created changelog file: $CHANGELOG_FILE"

    test_and_build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install dependencies
              run: |
                npm install
                cd frontend && npm install
                cd ..

            - name: Run tests
              run: npm run test:compile
              